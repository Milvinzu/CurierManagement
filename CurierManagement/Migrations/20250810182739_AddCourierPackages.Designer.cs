// <auto-generated />
using System;
using CurierManagement.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurierManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250810182739_AddCourierPackages")]
    partial class AddCourierPackages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("CurierManagement.Model.Courier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("HourlyRcate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RatePerKm")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Couriers");
                });

            modelBuilder.Entity("CurierManagement.Model.DeliveryPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.ToTable("DeliveryPackages");
                });

            modelBuilder.Entity("CurierManagement.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CourierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DeliveryPackageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Entryway")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Tips")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.HasIndex("DeliveryPackageId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CurierManagement.Model.RoutePoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeliveryPackageId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int>("Sequence")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryPackageId");

                    b.ToTable("RoutePoints");
                });

            modelBuilder.Entity("CurierManagement.Model.DeliveryPackage", b =>
                {
                    b.HasOne("CurierManagement.Model.Courier", "Courier")
                        .WithMany("Packages")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("CurierManagement.Model.Order", b =>
                {
                    b.HasOne("CurierManagement.Model.Courier", "Courier")
                        .WithMany()
                        .HasForeignKey("CourierId");

                    b.HasOne("CurierManagement.Model.DeliveryPackage", "DeliveryPackage")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryPackageId");

                    b.Navigation("Courier");

                    b.Navigation("DeliveryPackage");
                });

            modelBuilder.Entity("CurierManagement.Model.RoutePoint", b =>
                {
                    b.HasOne("CurierManagement.Model.DeliveryPackage", "DeliveryPackage")
                        .WithMany("Route")
                        .HasForeignKey("DeliveryPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryPackage");
                });

            modelBuilder.Entity("CurierManagement.Model.Courier", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("CurierManagement.Model.DeliveryPackage", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Route");
                });
#pragma warning restore 612, 618
        }
    }
}
